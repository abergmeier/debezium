load("@io_bazel_rules_scala//scala:scala.bzl", "scala_library", "scala_test")

scala_library(
    name = "config",
    srcs = [
        "TeratadataConnectorConfig.scala",
    ],
    deps = [
        ":secureconnectionmode",
        "//debezium-core",
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
    ],
)

scala_library(
    name = "dataactor",
    srcs = [
        "DataActor.scala",
    ],
    deps = [
        "@com_typesafe_akka_akka_actor//jar",
        ":row",
    ],
)

scala_test(
    name = "dataactor_test",
    srcs = [
        "DataActorTest.scala",
    ],
    deps = [
        "@com_typesafe_akka_akka_actor//jar",
        "@com_typesafe_config//jar",
        ":dataactor",
        ":row",
    ],
)

scala_library(
    name = "debezium-connector-teradata",
    srcs = [
        "TeradataConnector.scala",
    ],
    deps = [
        ":config",
        ":task",
        "//debezium-core",
        "@com_exasol_jdbc//:jar",
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
    ],
)

scala_library(
    name = "executesql",
    srcs = [
        "ExecuteSQL.scala",
    ],
)

scala_library(
    name = "module",
    srcs = [
        "Module.scala",
    ],
)

scala_library(
    name = "row",
    srcs = [
        "Row.scala",
    ],
)

java_library(
    name = "secureconnectionmode",
    srcs = [
        "src/main/java/io/debezium/connector/teradata/SecureConnectionMode.java",
    ],
    deps = [
        "//debezium-core",
    ],
)

scala_library(
    name = "snapshotactor",
    srcs = [
        "SnapshotActor.scala",
    ],
    deps = [
        "@com_typesafe_akka_akka_actor//jar",
        ":executesql",
        ":sqlstream",
        ":row",
    ],
)

scala_test(
    name = "snapshotactor_test",
    srcs = [
        "SnapshotActorTest.scala",
    ],
    deps = [
        "@com_typesafe_akka_akka_actor//jar",
        "@com_typesafe_config//jar",
        ":executesql",
        ":snapshotactor",
        ":row",
    ],
)

scala_library(
    name = "sqlstream",
    srcs = [
        "SQLStream.scala",
    ],
    deps = [
        ":row",
    ],
)

scala_library(
    name = "sourceinfo",
    srcs = [
        "SourceInfo.scala",
    ],
    deps = [
        ":module",
        "//debezium-core",
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
    ],
)

scala_library(
    name = "task",
    srcs = [
        "TeradataConnectorTask.scala",
    ],
    deps = [
        ":config",
        ":module",
        ":sourceinfo",
        "//debezium-core",
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
        "@org_slf4j_slf4j_api//jar",
    ],
)

scala_library(
    name = "teradataactor",
    srcs = [
        "TeradataActor.scala",
    ],
    deps = [
        ":executesql",
        ":sqlstream",
        ":row",
        "@com_typesafe_akka_akka_actor//jar",
    ],
)

scala_library(
    name = "teradataconnection",
    srcs = [
        "TeradataConnection.scala",
    ],
    deps = [
        ":teradata-jdbc",
        "@org_slf4j_slf4j_api//jar",
    ],
)

scala_test(
    name = "teradataactor_test",
    srcs = [
        "TeradataActorTest.scala",
    ],
    deps = [
        ":executesql",
        ":row",
        ":sqlstream",
        ":teradataactor",
        "@com_typesafe_akka_akka_actor//jar",
        "@com_typesafe_config//jar",
    ],
)

java_import(
    name = "teradata-jdbc",
    jars = [
        "tdgssconfig.jar",
        "terajdbc4.jar",
    ],
    visibility = ["//visibility:public"],
)

scala_test(
    name = "teradataconnection_test",
    srcs = [
        "TeradataConnectionTest.scala",
    ],
    deps = [
        ":teradata-jdbc",
        ":teradataconnection",
    ],
)
