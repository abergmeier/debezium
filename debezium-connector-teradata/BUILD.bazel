load("@io_bazel_rules_scala//scala:scala.bzl", "scala_library", "scala_test")

scala_library(
    name = "config",
    srcs = [
        "TeratadataConnectorConfig.scala",
    ],
    deps = [
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
        "//debezium-core",
        ":secureconnectionmode",
    ],
)

scala_library(
    name = "debezium-connector-teradata",
    srcs = [
        "TeradataConnector.scala",
    ],
    deps = [
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
        "@com_exasol_jdbc//:jar",
        "//debezium-core",
        ":config",
        ":task",
    ],
)

scala_library(
    name = "module",
    srcs = [
        "Module.scala",
    ],
)

java_library(
    name = "secureconnectionmode",
    srcs = [
        "src/main/java/io/debezium/connector/teradata/SecureConnectionMode.java",
    ],
    deps = [
        "//debezium-core",
    ],
)

scala_library(
    name = "sourceinfo",
    srcs = [
        "SourceInfo.scala",
    ],
    deps = [
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
        "//debezium-core",
        ":module",
    ]
)

scala_library(
    name = "task",
    srcs = [
        "TeradataConnectorTask.scala",
    ],
    deps = [
        "@org_apache_kafka_connect_api//jar",
        "@org_apache_kafka_kafka_clients//jar",
        "@org_slf4j_slf4j_api//jar",
        "//debezium-core",
        ":config",
        ":module",
        ":sourceinfo",
    ],
)

scala_test(
    name = "connector_test",
    srcs = [
        "SourceConnectorTest.scala",
    ],
    deps = [
        ":debezium-connector-teradata",
    ],
)